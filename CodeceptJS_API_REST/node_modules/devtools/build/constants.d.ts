import type { Options } from '@wdio/types';
export declare const DEFAULT_WIDTH = 1200;
export declare const DEFAULT_HEIGHT = 900;
export declare const DEFAULT_X_POSITION = 0;
export declare const DEFAULT_Y_POSITION = 0;
export declare const ELEMENT_KEY = "element-6066-11e4-a52e-4f735466cecf";
export declare const SHADOW_ELEMENT_KEY = "shadow-6066-11e4-a52e-4f735466cecf";
export declare const DEFAULT_FLAGS: string[];
export declare const CHROME_NAMES: string[];
export declare const FIREFOX_NAMES: string[];
export declare const EDGE_NAMES: string[];
export declare const SUPPORTED_BROWSER: string[];
export declare const BROWSER_TYPE: {
    chrome: 'chrome';
    firefox: 'firefox';
    edge: 'edge';
};
export declare const DEFAULTS: Options.Definition<Options.WebDriver>;
export declare const DEFAULT_IMPLICIT_TIMEOUT = 0;
export declare const DEFAULT_PAGELOAD_TIMEOUT: number;
export declare const DEFAULT_SCRIPT_TIMEOUT: number;
export declare const SUPPORTED_SELECTOR_STRATEGIES: string[];
export declare const SERIALIZE_PROPERTY = "data-devtoolsdriver-fetchedElement";
export declare const SERIALIZE_FLAG = "__executeElement";
export declare const PPTR_LOG_PREFIX = "puppeteer:protocol";
export declare const ERROR_MESSAGES: {
    staleElement: {
        name: string;
        message: string;
    };
};
export declare const VENDOR_PREFIX: {
    chrome: 'goog:chromeOptions';
    'chrome headless': 'goog:chromeOptions';
    firefox: 'moz:firefoxOptions';
    edge: 'ms:edgeOptions';
};
/**
 * unicode chars mapped to Puppeteer key map
 */
export declare const UNICODE_CHARACTERS: {
    Cancel: string;
    Help: string;
    Backspace: string;
    Tab: string;
    Clear: string;
    Enter: string;
    NumpadEnter: string;
    ShiftLeft: string;
    ControlLeft: string;
    ControlRight: string;
    AltLeft: string;
    Pause: string;
    Escape: string;
    Space: string;
    PageUp: string;
    PageDown: string;
    End: string;
    Home: string;
    ArrowLeft: string;
    ArrowUp: string;
    ArrowRight: string;
    ArrowDown: string;
    Insert: string;
    Delete: string;
    Semicolon: string;
    '=': string;
    Numpad0: string;
    Numpad1: string;
    Numpad2: string;
    Numpad3: string;
    Numpad4: string;
    Numpad5: string;
    Numpad6: string;
    Numpad7: string;
    Numpad8: string;
    Numpad9: string;
    NumpadMultiply: string;
    NumpadAdd: string;
    Separator: string;
    NumpadSubtract: string;
    NumpadDecimal: string;
    NumpadDivide: string;
    F1: string;
    F2: string;
    F3: string;
    F4: string;
    F5: string;
    F6: string;
    F7: string;
    F8: string;
    F9: string;
    F10: string;
    F11: string;
    F12: string;
    MetaLeft: string;
};
//# sourceMappingURL=constants.d.ts.map